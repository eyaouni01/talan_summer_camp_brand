# ============================================================================
# üìÑ agents/posting_agent.py
# ============================================================================
from core.linkedin_poster import LinkedInPoster
from typing import Dict, Optional

class PostingAgent:
    """
    Agent MCP pour la publication LinkedIn R√âELLE
    """
    
    def __init__(self):
        self.linkedin_poster = LinkedInPoster()
    
    async def post_to_linkedin_real(self, content: str, preferences: Dict) -> Optional[Dict]:
        """
        Interface principale pour publier R√âELLEMENT sur LinkedIn
        
        Args:
            content: Contenu √† publier
            preferences: Pr√©f√©rences contenant le token LinkedIn
            
        Returns:
            dict: R√©sultat de la publication ou None
        """
        print("ü§ñ Agent Posting: D√©marrage de la publication R√âELLE...")
        
        access_token = preferences.get('linkedin_token')
        
        if not access_token:
            print("‚ùå Token LinkedIn manquant - Impossible de publier")
            return None
        
        result =  self.linkedin_poster.post_content_real(content, access_token)
        
        if result:
            print("‚úÖ Agent Posting: Publication LinkedIn r√©ussie!")
            return result
        else:
            print("‚ùå Agent Posting: √âchec de publication LinkedIn")
            return None